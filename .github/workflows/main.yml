name: Create VeniceRCON Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release Version'
        required: true

jobs:
  # Creating release on GitHub
  release:
    name: create release
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: Release ${{ github.event.inputs.version }}
          draft: true
          prerelease: false
      - shell: bash
        run: |
          echo "${{ steps.create_release.outputs.upload_url }}" > url.txt
      - name: upload release url
        uses: actions/upload-artifact@v1
        with:
          name: release-info
          path: url.txt
  build-frontend:
    name: build frontend
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2
        with:
          repository: alliance-apps/VeniceRCON-UI
      - name: use node version 14
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: install dependencies
        run: npm ci
      - name: build release
        run: npm run build
      - uses: actions/upload-artifact@v2
        with:
          name: frontend
          path: dist/
  build-backend:
    name: build backend
    runs-on: ubuntu-latest
    needs: [release, build-frontend]
    strategy:
      matrix:
        node-version: [12, 13, 14, 15]
    steps:
      - name: checkout code
        uses: actions/checkout@v2
        with:
          repository: alliance-apps/VeniceRCON-backend
      - name: use node version ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: download release url
        uses: actions/download-artifact@v1
        with:
          name: release-info
      - shell: bash
        id: release
        run: |
          RELEASE_URL=`cat release-info/url.txt`
          echo "Got URL $RELEASE_URL"
          echo "::set-output name=release_url::$RELEASE_URL"
          echo "saved output: ${{ steps.release.outputs.release_url }}"
      - name: install dependencies
        run: npm ci
      - name: build release
        run: npm run build
      - name: cleanup node_modules
        run: rm -R node_modules
      - name: install production dependencies
        run: npm install --only=prod
      - name: pack project
        run: |
          mkdir venicercon-${{ github.event.inputs.version }}
          cp -r -t venicercon-${{ github.event.inputs.version }} public node_modules lib package*.json README.md config.default.yaml ecosystem.config.js
          find ./venicercon-${{ github.event.inputs.version }} -name "*.js.map" -type f -delete
      - uses: actions/upload-artifact@v2
        with:
          name: backend-${{ matrix.node-version }}
          path: venicercon-${{ github.event.inputs.version }}/
